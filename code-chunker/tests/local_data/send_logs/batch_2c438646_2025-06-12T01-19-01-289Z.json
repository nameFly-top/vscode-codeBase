{
  "batchInfo": {
    "batchId": "2c438646",
    "timestamp": "2025-06-12T01:19:01.289Z",
    "chunkCount": 3,
    "userId": "test-monitor-user-comprehensive",
    "deviceId": "test-monitor-device-comprehensive"
  },
  "embeddingOptions": {
    "uniqueId": "test-monitor-user-comprehensive-test-monitor-device-comprehensive-1749691141289",
    "parserVersion": "1.0.0",
    "processingMode": "sync"
  },
  "codeChunks": [
    {
      "chunkId": "file_scanner_4055982f_1-3_mbsoxcdj_0",
      "status": "success",
      "vector": [
        -0.951171875,
        0.00090789794921875,
        0.5078125,
        -0.6328125,
        0.1123046875,
        -0.467041015625,
        0.037261962890625,
        0.8125,
        -0.43603515625,
        0.6982421875,
        0.194091796875,
        0.8740234375,
        -0.64013671875,
        -0.2161865234375,
        0.421630859375,
        -0.26318359375,
        -0.21923828125,
        -0.3515625,
        0.28564453125,
        0.5068359375,
        0.154296875,
        0.1478271484375,
        -0.364990234375,
        0.57568359375,
        0.79052734375,
        -0.0120086669921875,
        -0.791015625,
        -0.6962890625,
        -0.08447265625,
        -0.386474609375,
        0.28564453125,
        0.150146484375,
        0.15625,
        0.2340087890625,
        0.134033203125,
        0.007419586181640625,
        -0.72900390625,
        0.38037109375,
        0.08746337890625,
        -0.67919921875,
        -0.5654296875,
        -0.59228515625,
        0.269775390625,
        0.350830078125,
        -0.294921875,
        0.6787109375,
        -0.71044921875,
        0.65380859375,
        0.2152099609375,
        0.4892578125,
        -0.76220703125,
        0.0242919921875,
        0.20263671875,
        -0.42236328125,
        0.7021484375,
        -0.10595703125,
        0.83203125,
        0.56201171875,
        0.23974609375,
        -0.0078277587890625,
        -0.412841796875,
        0.2259521484375,
        -0.191650390625,
        0.63916015625,
        0.2578125,
        0.373291015625,
        -0.73828125,
        -0.250244140625,
        -0.5048828125,
        0.52783203125,
        -0.135009765625,
        -0.240478515625,
        0.303466796875,
        -0.21875,
        -0.280517578125,
        0.0093994140625,
        0.0496826171875,
        -0.7646484375,
        0.051300048828125,
        -0.134033203125,
        0.357177734375,
        0.00455474853515625,
        -0.69921875,
        -0.30126953125,
        0.642578125,
        -0.482177734375,
        -0.6552734375,
        -0.72021484375,
        0.1619873046875,
        0.29150390625,
        -0.03448486328125,
        0.77001953125,
        0.34521484375,
        -0.3671875,
        -0.313232421875,
        0.060089111328125,
        0.11883544921875,
        -0.395751953125,
        -0.274658203125,
        -0.86572265625,
        -0.482177734375,
        -0.63330078125,
        -0.35009765625,
        -0.043121337890625,
        -0.472900390625,
        -0.275146484375,
        0.6220703125,
        -0.615234375,
        0.321044921875,
        -0.019012451171875,
        0.82958984375,
        0.552734375,
        0.22216796875,
        -0.64794921875,
        0.10791015625,
        -0.337646484375,
        -0.2344970703125,
        0.83837890625,
        0.7216796875,
        -0.3603515625,
        0.1591796875,
        -0.07916259765625,
        -0.59912109375,
        0.00830841064453125,
        -0.490478515625,
        0.250732421875,
        -0.1038818359375,
        -0.154541015625,
        -0.026275634765625,
        0.92138671875,
        0.07269287109375,
        0.294189453125,
        -0.20166015625,
        0.50390625,
        0.276611328125,
        -0.344970703125,
        -0.280029296875,
        0.01751708984375,
        0.12158203125,
        -0.440185546875,
        0.2032470703125,
        0.059906005859375,
        -0.07489013671875,
        0.08660888671875,
        0.6689453125,
        -0.2147216796875,
        -0.453125,
        -0.54638671875,
        -0.630859375,
        -0.73779296875,
        0.57177734375,
        0.12493896484375,
        0.09149169921875,
        -0.7265625,
        0.46435546875,
        0.31298828125,
        0.90087890625,
        0.328125,
        0.249267578125,
        0.03485107421875,
        -0.388427734375,
        -0.703125,
        0.49853515625,
        -0.276123046875,
        -0.35595703125,
        -0.07763671875,
        -0.52880859375,
        -0.42822265625,
        -0.486328125,
        0.076171875,
        -0.018768310546875,
        -0.58154296875,
        -0.39111328125,
        -0.26806640625,
        0.1619873046875,
        -0.1534423828125,
        0.477783203125,
        0.56201171875,
        -0.33203125,
        -0.5732421875,
        0.2127685546875,
        -0.074462890625,
        -0.391357421875,
        -0.1536865234375,
        -0.6904296875,
        -0.5009765625,
        0.17529296875,
        0.6240234375,
        0.39697265625,
        -0.51904296875,
        0.367919921875,
        0.6318359375,
        -0.51025390625,
        0.10748291015625,
        0.2137451171875,
        -0.036407470703125,
        0.1270751953125,
        0.515625,
        0.43798828125,
        -0.27197265625,
        -0.26171875,
        0.51611328125,
        -0.66259765625,
        0.2342529296875,
        -0.387939453125,
        0.216552734375,
        -0.085693359375,
        0.2149658203125,
        0.1614990234375,
        0.5302734375,
        -0.3994140625,
        -0.390625,
        -0.45361328125,
        0.007175445556640625,
        0.45458984375,
        -0.3310546875,
        -0.1983642578125,
        -0.53369140625,
        -0.06024169921875,
        -0.215087890625,
        -0.25927734375,
        -0.315185546875,
        0.7998046875,
        0.45703125,
        0.8134765625,
        0.2423095703125,
        -0.544921875,
        0.658203125,
        0.1751708984375,
        0.6171875,
        -0.0273284912109375,
        0.0246734619140625,
        -0.442626953125,
        -0.1357421875,
        0.3916015625,
        0.85107421875,
        -0.2471923828125,
        -0.331787109375,
        0.51318359375,
        -0.59375,
        0.0037822723388671875,
        0.188232421875,
        0.420166015625,
        -0.4609375,
        -0.65673828125,
        0.6259765625,
        0.3037109375,
        -0.564453125,
        -0.04046630859375,
        -0.1134033203125,
        0.318603515625,
        -0.63671875,
        -0.525390625,
        0.240966796875,
        -0.33642578125,
        0.677734375,
        -0.302001953125,
        0.6162109375,
        0.27587890625,
        -0.654296875,
        -0.09783935546875,
        0.515625,
        -0.3173828125,
        -0.25634765625,
        0.7333984375,
        0.51025390625,
        -0.30419921875,
        0.375732421875,
        0.42431640625,
        0.85986328125,
        0.728515625,
        -0.2210693359375,
        0.2364501953125,
        -0.73193359375,
        -0.2442626953125,
        0.08258056640625,
        -0.3583984375,
        -0.82470703125,
        -0.3818359375,
        -0.09295654296875,
        -0.3173828125,
        -0.5146484375,
        0.51220703125,
        0.1717529296875,
        0.01232147216796875,
        -0.149169921875,
        -0.75341796875,
        0.61083984375,
        0.02978515625,
        -0.82373046875,
        0.12353515625,
        -0.11029052734375,
        0.84033203125,
        0.51904296875,
        0.87353515625,
        0.6865234375,
        0.58740234375,
        -0.08795166015625,
        -0.63134765625,
        -0.72607421875,
        0.25390625,
        0.047760009765625,
        0.1922607421875,
        0.751953125,
        0.351806640625,
        -0.317138671875,
        -0.525390625,
        -0.740234375,
        0.763671875,
        0.5068359375,
        0.701171875,
        0.0299224853515625,
        -0.178466796875,
        -0.78173828125,
        0.6943359375,
        -0.0007548332214355469,
        -0.09832763671875,
        -0.21826171875,
        -0.78857421875,
        -0.3447265625,
        0.63037109375,
        0.78271484375,
        0.14453125,
        0.5146484375,
        0.5859375,
        -0.50244140625,
        -0.4970703125,
        -0.23193359375,
        -0.107177734375,
        -0.61474609375,
        0.306640625,
        -0.64794921875,
        0.189453125,
        0.357177734375,
        0.3330078125,
        -0.291259765625,
        0.302978515625,
        -0.323486328125,
        0.093505859375,
        -0.365966796875,
        0.273681640625,
        0.1268310546875,
        0.413330078125,
        0.5380859375,
        0.492919921875,
        0.53564453125,
        0.3388671875,
        0.62548828125,
        -0.32275390625,
        0.036285400390625,
        0.9228515625,
        0.21630859375,
        -0.48291015625,
        0.56884765625,
        -0.857421875,
        -0.49755859375,
        -0.8359375,
        0.2939453125,
        0.1895751953125,
        -0.286376953125,
        0.1580810546875,
        0.57958984375,
        -0.50341796875,
        -0.497802734375,
        0.50634765625,
        -0.06201171875,
        0.184326171875,
        -0.263427734375,
        0.04949951171875,
        0.37060546875,
        0.401611328125,
        -0.61572265625,
        -0.450927734375,
        -0.6064453125,
        -0.60693359375,
        0.062255859375,
        -0.18115234375,
        -0.44091796875,
        0.34423828125,
        0.64501953125,
        -0.52099609375,
        0.7265625,
        0.1973876953125,
        0.1004638671875,
        -0.4306640625,
        0.1878662109375,
        -0.365234375,
        -0.0902099609375,
        -0.2685546875,
        0.042205810546875,
        -0.87255859375,
        -0.293701171875,
        0.65283203125,
        0.55126953125,
        -0.8515625,
        -0.369140625,
        0.41162109375,
        0.51123046875,
        -0.07421875,
        0.34033203125,
        -0.12213134765625,
        0.865234375,
        0.51220703125,
        0.0097808837890625,
        -0.2232666015625,
        0.6572265625,
        0.08599853515625,
        -0.061737060546875,
        0.58203125,
        -0.372314453125,
        0.6962890625,
        0.460693359375,
        0.294189453125,
        -0.45849609375,
        0.51708984375,
        0.376220703125,
        0.1259765625,
        0.23974609375,
        -0.86083984375,
        0.1495361328125,
        0.65771484375,
        0.53759765625,
        0.44140625,
        -0.041412353515625,
        -0.2037353515625,
        0.6064453125,
        -0.343505859375,
        0.576171875,
        -0.9033203125,
        0.33349609375,
        -0.491943359375,
        -0.060394287109375,
        0.60888671875,
        -0.5,
        -0.14501953125,
        0.35498046875,
        0.51708984375,
        0.83984375,
        -0.47509765625,
        0.2314453125,
        -0.509765625,
        -0.5419921875,
        0.062042236328125,
        0.1865234375,
        0.0106201171875,
        0.7138671875,
        -0.39501953125,
        -0.1845703125,
        0.11956787109375,
        0.027740478515625,
        -0.63232421875,
        0.276123046875,
        -0.1837158203125,
        -0.233642578125,
        0.59326171875,
        0.2064208984375,
        0.09552001953125,
        0.48828125,
        -0.2144775390625,
        -0.865234375,
        -0.056549072265625,
        -0.5517578125,
        -0.455078125,
        0.278564453125,
        -0.033172607421875,
        -0.38623046875,
        0.1109619140625,
        -0.0748291015625,
        0.322265625,
        -0.446533203125,
        0.30126953125,
        -0.2044677734375,
        0.30517578125,
        0.1973876953125,
        -0.2044677734375,
        -0.2030029296875,
        0.50244140625,
        0.33349609375,
        0.458740234375,
        0.0567626953125,
        -0.9140625,
        -0.262451171875,
        -0.70068359375,
        -0.5224609375,
        0.1541748046875,
        -0.338134765625,
        0.416748046875,
        -0.43359375,
        -0.63916015625,
        0.25537109375,
        -0.529296875,
        0.193603515625,
        0.80322265625,
        -0.1826171875,
        -0.11920166015625,
        0.055511474609375,
        -0.1685791015625,
        0.427001953125,
        0.473876953125,
        0.27587890625,
        -0.004177093505859375,
        0.080322265625,
        0.625,
        -0.6962890625,
        0.04437255859375,
        -0.17724609375,
        0.0223236083984375,
        -0.1492919921875,
        0.2164306640625,
        -0.3818359375,
        0.5859375,
        -0.74853515625,
        0.150390625,
        0.876953125,
        -0.7353515625,
        -0.6259765625,
        -0.07208251953125,
        -0.408203125,
        -0.8203125,
        -0.445556640625,
        -0.7060546875,
        0.453125,
        -0.1444091796875,
        0.2205810546875,
        -0.399658203125,
        -0.37890625,
        0.00933074951171875,
        0.4033203125,
        0.065673828125,
        0.215087890625,
        0.0751953125,
        0.74169921875,
        0.6201171875,
        -0.004058837890625,
        0.320068359375,
        -0.68896484375,
        -0.31005859375,
        0.6162109375,
        0.09759521484375,
        0.418701171875,
        -0.1932373046875,
        -0.462890625,
        0.3837890625,
        0.111328125,
        0.436279296875,
        -0.1943359375,
        -0.2003173828125,
        -0.33935546875,
        -0.5283203125,
        -0.37158203125,
        -0.70166015625,
        0.1512451171875,
        -0.677734375,
        -0.36328125,
        -0.45751953125,
        -0.3603515625,
        -0.7568359375,
        -0.5634765625,
        0.1925048828125,
        0.52880859375,
        -0.4921875,
        -0.68115234375,
        0.20751953125,
        -0.359619140625,
        -0.1778564453125,
        -0.58056640625,
        0.1387939453125,
        -0.59716796875,
        0.09197998046875,
        0.4228515625,
        -0.312255859375,
        -0.36376953125,
        0.26708984375,
        0.019775390625,
        -0.57177734375,
        -0.65234375,
        -0.6708984375,
        0.53271484375,
        -0.41650390625,
        -0.7548828125,
        0.431884765625,
        -0.48193359375,
        0.423583984375,
        -0.4580078125,
        0.1693115234375,
        0.78955078125,
        0.52099609375,
        -0.8173828125,
        0.8203125,
        -0.43798828125,
        -0.2056884765625,
        0.30322265625,
        0.45703125,
        0.7587890625,
        -0.272216796875,
        0.434326171875,
        -0.310302734375,
        0.267578125,
        0.310302734375,
        -0.336181640625,
        0.70654296875,
        0.2568359375,
        -0.363525390625,
        0.303466796875,
        -0.78662109375,
        -0.316162109375,
        0.66015625,
        0.252197265625,
        0.0182342529296875,
        0.1588134765625,
        0.2474365234375,
        -0.322509765625,
        0.53173828125,
        0.73876953125,
        -0.64404296875,
        -0.18310546875,
        0.7568359375,
        0.271728515625,
        0.4482421875,
        0.1900634765625,
        0.6552734375,
        -0.60400390625,
        0.28955078125,
        -0.72265625,
        0.05743408203125,
        0.2313232421875,
        0.3486328125,
        -0.55908203125,
        0.8359375,
        -0.5595703125,
        0.0172271728515625,
        -0.865234375,
        0.389892578125,
        0.8896484375,
        -0.2279052734375,
        0.345458984375,
        -0.157470703125,
        0.472900390625,
        0.56494140625,
        -0.35546875,
        0.01641845703125,
        -0.261474609375,
        -0.55517578125,
        0.048248291015625,
        -0.458740234375,
        0.083740234375,
        -0.2476806640625,
        0.85986328125,
        -0.82470703125,
        0.611328125,
        -0.0767822265625,
        0.26416015625,
        -0.78662109375,
        0.1949462890625,
        0.22412109375,
        0.37646484375,
        -0.188232421875,
        0.62841796875,
        -0.203857421875,
        -0.52392578125,
        -0.64013671875,
        -0.197021484375,
        0.260986328125,
        0.0546875,
        -0.2386474609375,
        0.0242462158203125,
        0.1683349609375,
        0.5546875,
        -0.2060546875,
        -0.341552734375,
        0.039642333984375,
        0.197509765625,
        0.70068359375,
        -0.68994140625,
        -0.04345703125,
        -0.032958984375,
        0.65380859375,
        -0.374755859375,
        0.87158203125,
        0.382080078125,
        -0.80126953125,
        0.505859375,
        0.3427734375,
        -0.1063232421875,
        -0.251220703125,
        0.387451171875,
        -0.6171875,
        0.42919921875,
        0.2320556640625,
        0.54931640625,
        -0.284912109375,
        -0.48681640625,
        0.06781005859375,
        -0.9091796875,
        0.04046630859375,
        -0.040618896484375,
        0.3076171875,
        0.37158203125,
        0.66943359375,
        0.459716796875,
        -0.07952880859375,
        -0.181396484375,
        0.70849609375,
        0.15087890625,
        -0.1307373046875,
        0.03936767578125,
        -0.35009765625,
        -0.6298828125,
        0.399658203125,
        0.346923828125,
        0.88134765625,
        -0.8427734375,
        -0.0008172988891601562,
        -0.079833984375,
        0.77099609375,
        -0.12237548828125,
        -0.6650390625,
        0.564453125,
        -0.08050537109375,
        0.1368408203125,
        -0.406494140625,
        0.0287322998046875,
        0.180419921875,
        0.025299072265625,
        -0.73486328125,
        -0.322021484375,
        0.04559326171875,
        0.47802734375,
        0.38037109375,
        -0.42724609375,
        0.5693359375,
        0.046295166015625,
        0.529296875,
        0.429931640625,
        -0.63134765625,
        -0.5048828125,
        -0.7470703125,
        0.703125,
        0.27392578125,
        -0.08807373046875,
        0.6123046875,
        -0.0628662109375,
        -0.7021484375,
        0.607421875,
        -0.6767578125,
        -0.16943359375,
        -0.275634765625,
        -0.27880859375,
        0.08099365234375,
        -0.442626953125,
        0.28955078125,
        0.339111328125,
        -0.5263671875,
        0.23974609375,
        0.052978515625,
        0.51953125,
        -0.041473388671875,
        0.720703125,
        0.5537109375,
        0.8974609375,
        0.60107421875,
        -0.491943359375,
        0.04449462890625,
        -0.313720703125,
        -0.6748046875,
        -0.70458984375,
        -0.115966796875,
        -0.316162109375
      ],
      "dimension": 768,
      "processingTimeMs": 0,
      "modelVersion": "cocosoda-v1.1",
      "filePath": "chunker/file_scanner.py",
      "fileName": "file_scanner.py",
      "language": "python",
      "startLine": 1,
      "endLine": 3,
      "content": "\"\"\"\r\nFile scanner module for traversing directories and building Merkle trees\r\n\"\"\"",
      "parser": "python_parser",
      "type": "variable",
      "metadata": {
        "userId": "test-monitor-user-comprehensive",
        "deviceId": "test-monitor-device-comprehensive",
        "workspacePath": "E:\\北京芸思\\code_chunker\\code-chunker\\python",
        "language": "python",
        "startLine": 1,
        "endLine": 3,
        "content": "\"\"\"\r\nFile scanner module for traversing directories and building Merkle trees\r\n\"\"\"",
        "parser": "python_parser",
        "type": "variable",
        "vectorDimension": 768,
        "processingTimeMs": 0,
        "modelVersion": "cocosoda-v1.1",
        "createdAt": "2025-06-12T01:19:01.217Z"
      }
    },
    {
      "chunkId": "file_scanner_4055982f_5-8_mbsoxcdj_1",
      "status": "success",
      "vector": [
        -0.8447265625,
        -0.170654296875,
        0.67236328125,
        -0.482666015625,
        0.51416015625,
        0.6689453125,
        -0.010498046875,
        0.69091796875,
        -0.09246826171875,
        0.7763671875,
        -0.049774169921875,
        0.65283203125,
        -0.7353515625,
        0.1220703125,
        0.76416015625,
        0.187255859375,
        -0.127685546875,
        -0.2734375,
        0.287353515625,
        0.217529296875,
        0.384521484375,
        0.04876708984375,
        -0.36865234375,
        0.810546875,
        0.6591796875,
        0.2366943359375,
        -0.458740234375,
        -0.0299072265625,
        -0.54638671875,
        -0.583984375,
        -0.279296875,
        0.69384765625,
        -0.2115478515625,
        -0.2320556640625,
        0.369873046875,
        0.306884765625,
        -0.5302734375,
        0.6181640625,
        -0.160400390625,
        -0.467529296875,
        -0.6904296875,
        -0.7421875,
        0.2490234375,
        -0.2021484375,
        -0.73046875,
        0.74609375,
        -0.5673828125,
        0.87109375,
        0.54345703125,
        0.1173095703125,
        -0.38232421875,
        -0.054962158203125,
        0.477783203125,
        -0.1224365234375,
        0.40380859375,
        -0.55859375,
        -0.2281494140625,
        0.07196044921875,
        0.380126953125,
        -0.269287109375,
        -0.06256103515625,
        -0.49365234375,
        -0.1942138671875,
        0.0908203125,
        0.326904296875,
        0.42236328125,
        -0.29541015625,
        -0.451171875,
        -0.1851806640625,
        0.85400390625,
        -0.06494140625,
        0.05426025390625,
        0.2119140625,
        0.147705078125,
        -0.030426025390625,
        0.1920166015625,
        -0.2294921875,
        -0.84033203125,
        -0.304931640625,
        -0.38037109375,
        0.55859375,
        -0.251220703125,
        -0.4716796875,
        0.022979736328125,
        0.43115234375,
        -0.28955078125,
        0.1549072265625,
        -0.59423828125,
        0.318603515625,
        -0.07122802734375,
        -0.2366943359375,
        0.6669921875,
        -0.445068359375,
        -0.26611328125,
        0.1837158203125,
        -0.0860595703125,
        -0.08428955078125,
        0.4736328125,
        -0.06732177734375,
        -0.58984375,
        -0.349853515625,
        -0.1260986328125,
        0.8447265625,
        0.1334228515625,
        -0.28564453125,
        0.09423828125,
        0.402587890625,
        0.01318359375,
        0.207275390625,
        -0.1036376953125,
        -0.1424560546875,
        0.62255859375,
        0.216064453125,
        -0.32177734375,
        -0.273193359375,
        -0.288330078125,
        0.0167083740234375,
        0.88525390625,
        -0.01275634765625,
        0.155029296875,
        -0.26318359375,
        0.126708984375,
        -0.274169921875,
        0.06304931640625,
        0.367919921875,
        -0.05523681640625,
        -0.26806640625,
        -0.5986328125,
        0.25927734375,
        0.65625,
        -0.60595703125,
        -0.053985595703125,
        -0.11383056640625,
        0.5947265625,
        -0.525390625,
        -0.05621337890625,
        -0.15087890625,
        -0.701171875,
        0.51904296875,
        0.0472412109375,
        -0.38232421875,
        0.333740234375,
        0.1947021484375,
        0.189453125,
        0.86962890625,
        -0.0264129638671875,
        -0.1397705078125,
        -0.5615234375,
        0.1680908203125,
        -0.239990234375,
        0.474609375,
        0.07769775390625,
        -0.274169921875,
        0.06683349609375,
        -0.160888671875,
        -0.1533203125,
        0.7314453125,
        0.53173828125,
        -0.040740966796875,
        -0.58251953125,
        -0.16064453125,
        -0.39892578125,
        -0.41845703125,
        -0.44482421875,
        -0.7548828125,
        0.408203125,
        0.340087890625,
        -0.3173828125,
        -0.54931640625,
        0.319580078125,
        -0.308349609375,
        0.06768798828125,
        0.2479248046875,
        -0.21240234375,
        -0.1348876953125,
        0.309814453125,
        -0.005645751953125,
        0.00934600830078125,
        -0.27783203125,
        0.11724853515625,
        -0.0223846435546875,
        -0.6005859375,
        0.06329345703125,
        -0.0105133056640625,
        -0.42919921875,
        -0.50537109375,
        0.449951171875,
        0.307373046875,
        0.1484375,
        -0.257080078125,
        0.310546875,
        0.18994140625,
        -0.68310546875,
        -0.1138916015625,
        0.363037109375,
        -0.042388916015625,
        -0.7724609375,
        0.2724609375,
        0.0841064453125,
        0.1363525390625,
        -0.08056640625,
        0.67529296875,
        -0.1240234375,
        -0.3916015625,
        0.1258544921875,
        -0.258056640625,
        -0.470947265625,
        0.1727294921875,
        -0.263671875,
        0.494384765625,
        0.1890869140625,
        0.6923828125,
        -0.5107421875,
        -0.11126708984375,
        0.3974609375,
        0.2225341796875,
        -0.091552734375,
        -0.716796875,
        0.646484375,
        -0.455078125,
        -0.61767578125,
        -0.215576171875,
        0.8115234375,
        0.60986328125,
        0.484130859375,
        0.42431640625,
        0.2095947265625,
        0.61865234375,
        -0.08648681640625,
        0.798828125,
        0.045379638671875,
        0.211181640625,
        -0.44189453125,
        0.226318359375,
        0.190185546875,
        0.42431640625,
        0.37060546875,
        -0.29150390625,
        0.16064453125,
        0.30322265625,
        0.1641845703125,
        -0.1319580078125,
        0.11334228515625,
        -0.465087890625,
        -0.6796875,
        0.46240234375,
        0.6318359375,
        0.491943359375,
        -0.0175323486328125,
        0.08038330078125,
        -0.12939453125,
        -0.74267578125,
        -0.2230224609375,
        0.71044921875,
        -0.263916015625,
        0.84228515625,
        -0.28369140625,
        -0.0504150390625,
        0.63037109375,
        -0.76123046875,
        -0.1279296875,
        -0.0709228515625,
        -0.43994140625,
        -0.373046875,
        0.87890625,
        -0.58544921875,
        -0.2276611328125,
        0.05224609375,
        0.307861328125,
        0.875,
        0.265625,
        -0.039947509765625,
        -0.1282958984375,
        -0.5966796875,
        0.53564453125,
        -0.1961669921875,
        0.3291015625,
        0.336181640625,
        -0.345947265625,
        -0.005306243896484375,
        0.51611328125,
        -0.49267578125,
        0.54248046875,
        0.421142578125,
        0.264404296875,
        -0.64794921875,
        0.258544921875,
        0.256591796875,
        0.1973876953125,
        -0.449951171875,
        -0.0159759521484375,
        -0.485595703125,
        0.86083984375,
        0.023529052734375,
        0.45751953125,
        0.52880859375,
        0.50732421875,
        -0.7158203125,
        -0.71044921875,
        0.241943359375,
        0.505859375,
        0.12335205078125,
        0.32373046875,
        0.351318359375,
        0.09429931640625,
        -0.1309814453125,
        -0.06488037109375,
        -0.39697265625,
        0.64453125,
        -0.427978515625,
        0.53173828125,
        0.268798828125,
        -0.58447265625,
        -0.90625,
        0.65185546875,
        -0.7802734375,
        0.275634765625,
        0.30615234375,
        -0.47119140625,
        -0.55908203125,
        0.381591796875,
        0.85791015625,
        -0.83154296875,
        -0.0301971435546875,
        0.1524658203125,
        -0.28515625,
        0.0640869140625,
        0.04095458984375,
        0.1380615234375,
        -0.5390625,
        0.5927734375,
        -0.73828125,
        -0.042572021484375,
        0.2861328125,
        -0.1033935546875,
        -0.32568359375,
        0.4296875,
        0.07720947265625,
        0.0694580078125,
        0.06597900390625,
        -0.01184844970703125,
        0.552734375,
        0.34765625,
        0.609375,
        0.326904296875,
        -0.03631591796875,
        0.67236328125,
        0.76416015625,
        -0.74951171875,
        0.09783935546875,
        0.364501953125,
        0.1331787109375,
        -0.445556640625,
        0.484130859375,
        -0.57763671875,
        0.04010009765625,
        -0.65380859375,
        -0.357177734375,
        0.275146484375,
        -0.2548828125,
        0.192138671875,
        0.368408203125,
        -0.459716796875,
        -0.1424560546875,
        -0.1458740234375,
        -0.1591796875,
        0.251220703125,
        0.2271728515625,
        -0.485595703125,
        0.68994140625,
        0.6611328125,
        -0.158447265625,
        -0.3876953125,
        -0.40576171875,
        -0.55029296875,
        0.299560546875,
        -0.27099609375,
        -0.302734375,
        0.326171875,
        0.5478515625,
        -0.197021484375,
        0.5517578125,
        0.61083984375,
        0.2110595703125,
        -0.278076171875,
        0.66796875,
        -0.041168212890625,
        0.07000732421875,
        0.53955078125,
        0.2313232421875,
        -0.810546875,
        0.478515625,
        0.381103515625,
        0.6904296875,
        -0.85498046875,
        -0.61962890625,
        0.50341796875,
        0.63916015625,
        0.487060546875,
        0.105712890625,
        -0.1708984375,
        0.57861328125,
        0.495849609375,
        0.3486328125,
        0.457763671875,
        0.6142578125,
        -0.52392578125,
        0.038787841796875,
        -0.04559326171875,
        -0.089599609375,
        0.01190185546875,
        0.1976318359375,
        -0.0226898193359375,
        -0.58203125,
        0.58837890625,
        0.45556640625,
        -0.373046875,
        -0.3740234375,
        -0.89111328125,
        0.496337890625,
        0.089111328125,
        -0.3291015625,
        0.1761474609375,
        0.430908203125,
        -0.46484375,
        0.50390625,
        0.1617431640625,
        0.09515380859375,
        -0.297119140625,
        -0.2490234375,
        -0.36669921875,
        0.2509765625,
        0.64794921875,
        -0.2275390625,
        0.0193634033203125,
        -0.047454833984375,
        0.2763671875,
        0.66943359375,
        -0.406982421875,
        0.59716796875,
        0.0797119140625,
        -0.189453125,
        -0.171630859375,
        0.180908203125,
        -0.035980224609375,
        0.8203125,
        -0.2108154296875,
        0.434326171875,
        0.4794921875,
        0.280517578125,
        -0.72265625,
        -0.036712646484375,
        -0.5400390625,
        0.121337890625,
        0.4267578125,
        0.479248046875,
        0.53369140625,
        0.3115234375,
        0.150146484375,
        -0.7431640625,
        -0.44189453125,
        -0.172607421875,
        -0.1260986328125,
        -0.11627197265625,
        0.12548828125,
        -0.50146484375,
        0.0419921875,
        0.395263671875,
        0.390380859375,
        -0.08544921875,
        -0.6796875,
        -0.09747314453125,
        0.7216796875,
        0.4052734375,
        0.673828125,
        0.654296875,
        -0.204833984375,
        0.427978515625,
        0.64794921875,
        0.43408203125,
        -0.6533203125,
        -0.1951904296875,
        -0.404541015625,
        0.047698974609375,
        0.47021484375,
        -0.326171875,
        -0.0186004638671875,
        -0.06671142578125,
        0.17138671875,
        -0.5615234375,
        -0.271484375,
        0.08892822265625,
        0.732421875,
        -0.509765625,
        -0.48193359375,
        0.58349609375,
        0.11993408203125,
        0.1317138671875,
        0.64794921875,
        0.1318359375,
        -0.36181640625,
        0.138916015625,
        0.1270751953125,
        -0.355712890625,
        -0.1400146484375,
        0.04376220703125,
        -0.411865234375,
        -0.5380859375,
        0.2607421875,
        -0.367919921875,
        0.595703125,
        -0.03515625,
        0.2032470703125,
        0.3740234375,
        -0.6181640625,
        0.072509765625,
        -0.22265625,
        0.26904296875,
        -0.92138671875,
        -0.5517578125,
        -0.4248046875,
        0.62939453125,
        -0.66796875,
        0.10693359375,
        0.321533203125,
        -0.8271484375,
        -0.1004638671875,
        0.44970703125,
        0.12939453125,
        -0.10760498046875,
        -0.36181640625,
        0.84765625,
        0.642578125,
        -0.3994140625,
        -0.484375,
        -0.310791015625,
        -0.63818359375,
        0.58935546875,
        -0.39599609375,
        0.599609375,
        0.00408935546875,
        0.06072998046875,
        -0.1778564453125,
        0.33251953125,
        0.6796875,
        -0.27587890625,
        -0.412841796875,
        -0.2481689453125,
        -0.7138671875,
        -0.445556640625,
        -0.445556640625,
        -0.1513671875,
        -0.195068359375,
        0.1287841796875,
        0.51904296875,
        -0.40869140625,
        -0.5458984375,
        -0.345458984375,
        -0.1768798828125,
        0.4580078125,
        -0.69921875,
        -0.8212890625,
        -0.5009765625,
        -0.054443359375,
        0.11572265625,
        -0.315673828125,
        -0.082275390625,
        -0.53515625,
        0.049591064453125,
        0.371337890625,
        -0.497802734375,
        -0.295166015625,
        0.59912109375,
        -0.1728515625,
        -0.11138916015625,
        -0.828125,
        -0.53955078125,
        0.2467041015625,
        -0.6484375,
        -0.1563720703125,
        0.1549072265625,
        -0.548828125,
        0.046234130859375,
        -0.269775390625,
        0.261962890625,
        0.479248046875,
        0.425048828125,
        -0.84619140625,
        0.896484375,
        0.5,
        -0.673828125,
        0.56005859375,
        -0.1060791015625,
        0.1590576171875,
        0.126708984375,
        0.1689453125,
        -0.4365234375,
        0.123291015625,
        0.403076171875,
        0.2445068359375,
        0.73486328125,
        0.1021728515625,
        0.193359375,
        0.6552734375,
        -0.86279296875,
        -0.52685546875,
        -0.09930419921875,
        0.295654296875,
        0.5625,
        -0.36767578125,
        -0.30078125,
        0.005657196044921875,
        0.420166015625,
        0.67626953125,
        -0.2261962890625,
        0.18359375,
        0.4736328125,
        0.7578125,
        0.397216796875,
        0.32080078125,
        0.55224609375,
        -0.1666259765625,
        -0.230224609375,
        -0.63330078125,
        0.0828857421875,
        0.4189453125,
        0.3603515625,
        0.52294921875,
        0.8056640625,
        -0.327880859375,
        -0.453125,
        -0.861328125,
        0.59521484375,
        -0.1861572265625,
        0.10699462890625,
        0.63037109375,
        -0.21142578125,
        -0.07086181640625,
        0.337646484375,
        -0.83203125,
        0.11175537109375,
        -0.07843017578125,
        0.036834716796875,
        -0.54931640625,
        -0.59423828125,
        -0.384765625,
        -0.3173828125,
        0.00604248046875,
        -0.77734375,
        0.63330078125,
        0.2080078125,
        -0.059417724609375,
        -0.48974609375,
        -0.277587890625,
        0.10040283203125,
        -0.185302734375,
        0.6552734375,
        0.8427734375,
        -0.09698486328125,
        -0.71728515625,
        -0.53125,
        0.444091796875,
        0.466064453125,
        -0.051605224609375,
        -0.76025390625,
        0.01093292236328125,
        0.18212890625,
        0.29296875,
        0.4365234375,
        -0.277099609375,
        -0.4794921875,
        -0.1810302734375,
        0.6279296875,
        -0.25927734375,
        0.189697265625,
        0.2275390625,
        0.64404296875,
        -0.29150390625,
        0.74755859375,
        0.08160400390625,
        -0.5703125,
        0.1339111328125,
        0.058380126953125,
        -0.2529296875,
        0.357421875,
        0.0027751922607421875,
        -0.8017578125,
        0.1595458984375,
        -0.501953125,
        0.256591796875,
        -0.12103271484375,
        -0.6474609375,
        0.45703125,
        -0.5888671875,
        -0.62255859375,
        0.151611328125,
        0.87060546875,
        -0.19580078125,
        0.2069091796875,
        0.63623046875,
        -0.4033203125,
        -0.07177734375,
        0.416748046875,
        0.2171630859375,
        0.1951904296875,
        0.414306640625,
        -0.68798828125,
        0.197265625,
        0.0158233642578125,
        0.390869140625,
        0.69140625,
        -0.370849609375,
        -0.1934814453125,
        -0.0814208984375,
        0.76806640625,
        -0.2244873046875,
        -0.5771484375,
        0.469482421875,
        0.287353515625,
        0.552734375,
        -0.1549072265625,
        0.50927734375,
        -0.0927734375,
        -0.54931640625,
        -0.64013671875,
        -0.00958251953125,
        -0.285400390625,
        0.57421875,
        -0.412353515625,
        -0.57373046875,
        0.093994140625,
        -0.032440185546875,
        0.623046875,
        0.4326171875,
        -0.276123046875,
        -0.54833984375,
        0.301025390625,
        0.59619140625,
        0.2305908203125,
        -0.306396484375,
        0.54296875,
        -0.0258026123046875,
        -0.04193115234375,
        0.822265625,
        -0.5927734375,
        -0.212890625,
        -0.25634765625,
        -0.0640869140625,
        -0.001827239990234375,
        -0.1297607421875,
        0.0858154296875,
        0.396240234375,
        0.1136474609375,
        0.51220703125,
        -0.26708984375,
        0.72314453125,
        0.21533203125,
        0.6767578125,
        0.12371826171875,
        0.427978515625,
        0.693359375,
        -0.495849609375,
        0.724609375,
        -0.288330078125,
        -0.1656494140625,
        -0.62353515625,
        0.11199951171875,
        -0.338134765625
      ],
      "dimension": 768,
      "processingTimeMs": 0,
      "modelVersion": "cocosoda-v1.1",
      "filePath": "chunker/file_scanner.py",
      "fileName": "file_scanner.py",
      "language": "python",
      "startLine": 5,
      "endLine": 8,
      "content": "import os\nimport hashlib\nfrom typing import List, Tuple, Dict, Any, Optional, Set\nimport concurrent.futures",
      "parser": "python_parser",
      "type": "import",
      "metadata": {
        "userId": "test-monitor-user-comprehensive",
        "deviceId": "test-monitor-device-comprehensive",
        "workspacePath": "E:\\北京芸思\\code_chunker\\code-chunker\\python",
        "language": "python",
        "startLine": 5,
        "endLine": 8,
        "content": "import os\nimport hashlib\nfrom typing import List, Tuple, Dict, Any, Optional, Set\nimport concurrent.futures",
        "parser": "python_parser",
        "type": "import",
        "vectorDimension": 768,
        "processingTimeMs": 0,
        "modelVersion": "cocosoda-v1.1",
        "createdAt": "2025-06-12T01:19:01.253Z"
      }
    },
    {
      "chunkId": "file_scanner_4055982f_11-205_mbsoxcdj_2",
      "status": "success",
      "vector": [
        -0.9619140625,
        0.379150390625,
        0.5615234375,
        -0.826171875,
        0.50634765625,
        -0.357177734375,
        -0.055908203125,
        0.880859375,
        -0.1240234375,
        0.241455078125,
        0.42431640625,
        0.9462890625,
        -0.209716796875,
        -0.49755859375,
        0.6396484375,
        -0.4560546875,
        0.252685546875,
        -0.155517578125,
        0.505859375,
        0.08758544921875,
        -0.2366943359375,
        0.279052734375,
        -0.2213134765625,
        -0.207763671875,
        0.82568359375,
        0.0360107421875,
        -0.2362060546875,
        -0.8837890625,
        0.018829345703125,
        -0.34619140625,
        0.650390625,
        0.52978515625,
        0.640625,
        -0.11431884765625,
        0.421875,
        -0.494384765625,
        -0.75390625,
        0.3232421875,
        0.25146484375,
        -0.36083984375,
        -0.330078125,
        -0.3408203125,
        0.00501251220703125,
        -0.126708984375,
        -0.105712890625,
        0.77978515625,
        -0.7412109375,
        0.6962890625,
        -0.11492919921875,
        0.298583984375,
        -0.89453125,
        -0.68798828125,
        -0.57421875,
        -0.404296875,
        0.28125,
        -0.5185546875,
        0.85205078125,
        -0.355224609375,
        0.291015625,
        -0.10467529296875,
        -0.51220703125,
        -0.089599609375,
        -0.279052734375,
        0.142333984375,
        0.485107421875,
        0.08172607421875,
        -0.6484375,
        -0.64794921875,
        -0.448486328125,
        0.66357421875,
        -0.447021484375,
        -0.546875,
        0.023956298828125,
        -0.10638427734375,
        0.033416748046875,
        0.07958984375,
        0.423583984375,
        -0.572265625,
        -0.271728515625,
        -0.18017578125,
        -0.439697265625,
        0.0164642333984375,
        -0.35888671875,
        -0.006832122802734375,
        0.300048828125,
        -0.5263671875,
        -0.490478515625,
        -0.77197265625,
        0.5361328125,
        0.465087890625,
        -0.30810546875,
        0.71142578125,
        0.37841796875,
        0.499267578125,
        -0.09039306640625,
        -0.11077880859375,
        0.26171875,
        -0.2164306640625,
        -0.2578125,
        -0.91552734375,
        -0.2313232421875,
        -0.7861328125,
        -0.243408203125,
        -0.264892578125,
        -0.67333984375,
        0.62939453125,
        0.72119140625,
        -0.673828125,
        -0.3798828125,
        -0.409423828125,
        0.04278564453125,
        0.8447265625,
        -0.1239013671875,
        -0.71484375,
        -0.14892578125,
        0.0662841796875,
        0.02935791015625,
        0.8935546875,
        0.59130859375,
        0.156982421875,
        0.445556640625,
        -0.689453125,
        -0.56787109375,
        0.459228515625,
        -0.54150390625,
        0.41259765625,
        0.014892578125,
        -0.0582275390625,
        -0.20849609375,
        0.9833984375,
        -0.1201171875,
        0.541015625,
        -0.0791015625,
        0.16552734375,
        -0.09002685546875,
        -0.353759765625,
        0.39697265625,
        -0.5517578125,
        -0.0830078125,
        -0.109375,
        0.29150390625,
        0.0826416015625,
        -0.391845703125,
        -0.0035858154296875,
        0.505859375,
        -0.04608154296875,
        -0.244384765625,
        0.0081024169921875,
        -0.82958984375,
        -0.90087890625,
        0.61767578125,
        -0.3037109375,
        0.86669921875,
        -0.66748046875,
        0.55712890625,
        -0.1646728515625,
        0.9287109375,
        -0.03985595703125,
        0.62060546875,
        -0.0250244140625,
        -0.408935546875,
        -0.72705078125,
        0.022796630859375,
        0.12042236328125,
        -0.154296875,
        -0.04339599609375,
        -0.2353515625,
        -0.66259765625,
        -0.56884765625,
        -0.1634521484375,
        -0.430908203125,
        -0.0063018798828125,
        0.214599609375,
        0.35888671875,
        0.0309906005859375,
        0.62255859375,
        0.0134429931640625,
        0.57373046875,
        -0.280029296875,
        0.09259033203125,
        0.203369140625,
        -0.154541015625,
        -0.111328125,
        -0.1494140625,
        -0.7451171875,
        -0.440673828125,
        0.76806640625,
        0.7314453125,
        0.4375,
        -0.66552734375,
        -0.1976318359375,
        0.09002685546875,
        -0.468505859375,
        -0.4140625,
        0.65625,
        -0.41552734375,
        -0.64501953125,
        0.364990234375,
        0.83349609375,
        0.0595703125,
        -0.775390625,
        0.52685546875,
        -0.51953125,
        0.357666015625,
        -0.5078125,
        -0.03631591796875,
        -0.1484375,
        0.73095703125,
        -0.0335693359375,
        0.5927734375,
        -0.48193359375,
        -0.421875,
        -0.5908203125,
        0.28125,
        0.7353515625,
        0.1290283203125,
        0.289794921875,
        -0.41552734375,
        0.21923828125,
        -0.362548828125,
        -0.2293701171875,
        -0.34716796875,
        0.51416015625,
        0.470458984375,
        0.6591796875,
        0.6875,
        -0.8134765625,
        0.77001953125,
        0.099609375,
        0.8154296875,
        0.5263671875,
        -0.392333984375,
        -0.38037109375,
        -0.08538818359375,
        0.06842041015625,
        0.767578125,
        -0.044830322265625,
        -0.52783203125,
        0.21630859375,
        -0.1815185546875,
        -0.23583984375,
        0.3515625,
        0.290771484375,
        -0.63330078125,
        -0.60400390625,
        0.84765625,
        0.59033203125,
        -0.57421875,
        0.2890625,
        -0.299072265625,
        0.61669921875,
        -0.6796875,
        -0.01313018798828125,
        0.43310546875,
        -0.178955078125,
        0.7275390625,
        -0.6162109375,
        0.5703125,
        0.375732421875,
        -0.8046875,
        -0.1966552734375,
        0.05126953125,
        0.170654296875,
        -0.50146484375,
        0.666015625,
        0.492919921875,
        -0.317626953125,
        0.5537109375,
        -0.36376953125,
        0.720703125,
        0.50732421875,
        -0.47509765625,
        0.65625,
        -0.74853515625,
        0.1885986328125,
        -0.58740234375,
        -0.0084228515625,
        -0.58447265625,
        0.260986328125,
        -0.0006604194641113281,
        -0.100341796875,
        -0.349609375,
        0.281494140625,
        0.486083984375,
        -0.484375,
        -0.059844970703125,
        -0.87548828125,
        0.701171875,
        0.13916015625,
        -0.77294921875,
        0.2281494140625,
        -0.033721923828125,
        0.94775390625,
        0.489013671875,
        0.68310546875,
        0.034942626953125,
        0.49365234375,
        -0.0018739700317382812,
        -0.453857421875,
        -0.8583984375,
        0.40576171875,
        0.42138671875,
        -0.322265625,
        0.85498046875,
        0.307861328125,
        0.286376953125,
        -0.5625,
        -0.818359375,
        0.496826171875,
        0.437255859375,
        0.7890625,
        0.3857421875,
        0.226318359375,
        -0.6796875,
        0.53466796875,
        -0.002910614013671875,
        0.1287841796875,
        -0.23095703125,
        -0.211181640625,
        -0.1900634765625,
        0.61376953125,
        0.748046875,
        -0.36865234375,
        0.68603515625,
        0.87451171875,
        0.25634765625,
        -0.60791015625,
        -0.8125,
        -0.373046875,
        -0.5380859375,
        0.794921875,
        -0.86962890625,
        0.134521484375,
        0.448974609375,
        0.4970703125,
        -0.6826171875,
        0.158935546875,
        -0.450439453125,
        -0.163818359375,
        -0.311767578125,
        0.69287109375,
        0.386962890625,
        0.6005859375,
        0.201416015625,
        0.47705078125,
        0.1517333984375,
        0.044281005859375,
        0.5615234375,
        -0.48046875,
        0.46044921875,
        0.84765625,
        -0.274169921875,
        -0.0745849609375,
        0.476318359375,
        -0.765625,
        -0.07598876953125,
        -0.87548828125,
        0.0215301513671875,
        -0.1302490234375,
        -0.5966796875,
        0.48486328125,
        0.057861328125,
        -0.55859375,
        0.2269287109375,
        0.11309814453125,
        -0.6162109375,
        -0.493408203125,
        -0.177001953125,
        0.4716796875,
        0.50244140625,
        0.0828857421875,
        -0.8125,
        0.1446533203125,
        -0.299560546875,
        -0.662109375,
        -0.41748046875,
        -0.2208251953125,
        -0.11981201171875,
        0.0760498046875,
        0.5810546875,
        -0.666015625,
        0.771484375,
        -0.42529296875,
        -0.1436767578125,
        0.021514892578125,
        0.28076171875,
        -0.08978271484375,
        -0.30126953125,
        -0.1650390625,
        -0.403076171875,
        -0.884765625,
        -0.693359375,
        0.7314453125,
        0.79736328125,
        -0.8203125,
        -0.658203125,
        0.4970703125,
        0.60498046875,
        0.02166748046875,
        0.422607421875,
        0.1822509765625,
        0.8193359375,
        0.619140625,
        -0.141845703125,
        -0.01471710205078125,
        0.75048828125,
        0.386474609375,
        0.505859375,
        0.4697265625,
        -0.01381683349609375,
        0.71533203125,
        0.1673583984375,
        0.2060546875,
        -0.467041015625,
        0.640625,
        0.2220458984375,
        0.30615234375,
        0.320068359375,
        -0.75048828125,
        0.57177734375,
        0.822265625,
        0.67919921875,
        -0.1392822265625,
        0.603515625,
        -0.1260986328125,
        0.6162109375,
        -0.19140625,
        -0.1978759765625,
        -0.223876953125,
        0.41015625,
        -0.27099609375,
        0.341064453125,
        0.47998046875,
        -0.51416015625,
        -0.4443359375,
        0.25146484375,
        0.71826171875,
        0.7998046875,
        -0.450439453125,
        0.5966796875,
        0.38134765625,
        -0.60400390625,
        0.5634765625,
        -0.09814453125,
        -0.6318359375,
        0.8857421875,
        0.34912109375,
        0.428466796875,
        0.41259765625,
        0.6416015625,
        -0.533203125,
        0.46826171875,
        0.05694580078125,
        0.1307373046875,
        0.6162109375,
        -0.08245849609375,
        -0.442626953125,
        0.7568359375,
        -0.1964111328125,
        -0.78271484375,
        -0.1097412109375,
        -0.82421875,
        -0.468994140625,
        0.14697265625,
        -0.49365234375,
        -0.8310546875,
        0.2188720703125,
        0.309326171875,
        0.39794921875,
        -0.4375,
        -0.143310546875,
        -0.3544921875,
        -0.2481689453125,
        -0.1292724609375,
        -0.724609375,
        -0.411865234375,
        0.019134521484375,
        0.63916015625,
        -0.03790283203125,
        0.210205078125,
        -0.76904296875,
        -0.6259765625,
        -0.69091796875,
        -0.62890625,
        -0.08734130859375,
        -0.1187744140625,
        0.521484375,
        -0.58056640625,
        -0.1712646484375,
        0.120361328125,
        -0.68408203125,
        0.08642578125,
        0.80712890625,
        -0.258544921875,
        0.081787109375,
        -0.436767578125,
        0.2388916015625,
        0.7841796875,
        0.258544921875,
        0.289306640625,
        0.41064453125,
        0.0704345703125,
        0.69140625,
        -0.68310546875,
        -0.5009765625,
        0.34521484375,
        -0.297119140625,
        -0.7431640625,
        0.304443359375,
        -0.7021484375,
        0.79052734375,
        -0.7763671875,
        0.40087890625,
        0.7197265625,
        -0.9599609375,
        -0.83203125,
        0.51513671875,
        -0.116455078125,
        -0.66259765625,
        -0.458740234375,
        -0.662109375,
        0.787109375,
        -0.5615234375,
        0.11358642578125,
        0.06884765625,
        -0.07159423828125,
        -0.091064453125,
        0.69775390625,
        0.2393798828125,
        -0.019683837890625,
        0.60205078125,
        0.59326171875,
        0.8544921875,
        0.1702880859375,
        -0.275390625,
        -0.437255859375,
        -0.1734619140625,
        0.5703125,
        -0.06146240234375,
        0.7099609375,
        -0.0811767578125,
        -0.5458984375,
        -0.21630859375,
        -0.0024547576904296875,
        0.340087890625,
        -0.33349609375,
        0.168701171875,
        0.403564453125,
        -0.45556640625,
        -0.5556640625,
        -0.7568359375,
        0.023773193359375,
        -0.6845703125,
        -0.24609375,
        -0.70849609375,
        -0.53515625,
        -0.89892578125,
        -0.5537109375,
        -0.365234375,
        0.365478515625,
        -0.1904296875,
        -0.6904296875,
        0.474609375,
        0.1209716796875,
        -0.051483154296875,
        0.016265869140625,
        0.306640625,
        -0.7763671875,
        -0.1573486328125,
        0.767578125,
        0.11578369140625,
        -0.5908203125,
        -0.31298828125,
        -0.111328125,
        0.0014562606811523438,
        -0.80224609375,
        -0.51806640625,
        -0.32763671875,
        -0.2471923828125,
        -0.67919921875,
        0.65673828125,
        -0.430419921875,
        0.57958984375,
        -0.18505859375,
        0.0904541015625,
        0.74951171875,
        0.62890625,
        -0.93212890625,
        0.904296875,
        -0.121826171875,
        -0.238525390625,
        0.82275390625,
        -0.475830078125,
        0.9326171875,
        0.1973876953125,
        0.4384765625,
        -0.288818359375,
        0.1903076171875,
        0.69970703125,
        -0.421630859375,
        0.62548828125,
        0.64111328125,
        -0.703125,
        -0.41015625,
        -0.6259765625,
        -0.34375,
        -0.22119140625,
        0.314697265625,
        -0.36474609375,
        -0.65234375,
        -0.5263671875,
        -0.36865234375,
        0.61328125,
        0.66015625,
        -0.330810546875,
        0.462158203125,
        0.72509765625,
        0.5283203125,
        0.6591796875,
        0.396240234375,
        0.367919921875,
        -0.15771484375,
        0.127685546875,
        -0.69970703125,
        0.3984375,
        0.332763671875,
        0.272216796875,
        -0.7880859375,
        0.384521484375,
        -0.375,
        0.2017822265625,
        -0.900390625,
        0.71826171875,
        0.78515625,
        0.7666015625,
        0.62060546875,
        0.0518798828125,
        0.5615234375,
        0.66943359375,
        -0.79931640625,
        0.2222900390625,
        -0.06597900390625,
        -0.5625,
        0.45361328125,
        -0.1339111328125,
        0.06524658203125,
        -0.3125,
        0.9248046875,
        -0.9326171875,
        0.73095703125,
        -0.225341796875,
        0.64013671875,
        -0.62744140625,
        -0.1209716796875,
        -0.32958984375,
        0.7001953125,
        -0.48486328125,
        0.34228515625,
        -0.147705078125,
        -0.414306640625,
        -0.72265625,
        -0.252197265625,
        -0.34326171875,
        0.334716796875,
        -0.164306640625,
        0.1903076171875,
        0.072998046875,
        0.485107421875,
        -0.34423828125,
        -0.0736083984375,
        -0.1505126953125,
        -0.176513671875,
        0.4267578125,
        -0.6611328125,
        0.062164306640625,
        -0.40625,
        0.76220703125,
        0.16748046875,
        0.9150390625,
        0.308349609375,
        -0.88916015625,
        0.53759765625,
        0.301513671875,
        0.0447998046875,
        -0.35498046875,
        0.36669921875,
        -0.7958984375,
        0.337646484375,
        0.238525390625,
        0.45751953125,
        -0.312744140625,
        -0.599609375,
        0.12841796875,
        -0.90625,
        -0.310791015625,
        -0.04876708984375,
        0.83642578125,
        0.71337890625,
        0.388916015625,
        0.1968994140625,
        -0.425048828125,
        -0.146240234375,
        0.6640625,
        0.03790283203125,
        -0.50146484375,
        -0.362060546875,
        -0.69384765625,
        -0.685546875,
        -0.1480712890625,
        -0.33203125,
        0.86376953125,
        -0.92041015625,
        -0.08282470703125,
        -0.1522216796875,
        0.52978515625,
        -0.04132080078125,
        -0.78076171875,
        0.5205078125,
        -0.576171875,
        0.37109375,
        -0.63623046875,
        0.03082275390625,
        0.09234619140625,
        -0.04754638671875,
        -0.62109375,
        -0.630859375,
        -0.3125,
        -0.1859130859375,
        0.6005859375,
        0.43359375,
        0.5185546875,
        0.268310546875,
        0.58056640625,
        0.020751953125,
        -0.45703125,
        -0.765625,
        -0.6064453125,
        0.77001953125,
        -0.28466796875,
        0.311279296875,
        0.60986328125,
        0.1558837890625,
        -0.880859375,
        0.775390625,
        -0.8134765625,
        0.350341796875,
        -0.432861328125,
        -0.361083984375,
        -0.325927734375,
        -0.436279296875,
        -0.212158203125,
        0.67578125,
        -0.57080078125,
        0.59130859375,
        -0.037109375,
        0.1600341796875,
        0.0030002593994140625,
        0.6513671875,
        0.74267578125,
        0.939453125,
        0.2484130859375,
        -0.55517578125,
        -0.25341796875,
        -0.6748046875,
        -0.5048828125,
        -0.7080078125,
        -0.1510009765625,
        -0.66064453125
      ],
      "dimension": 768,
      "processingTimeMs": 0,
      "modelVersion": "cocosoda-v1.1",
      "filePath": "chunker/file_scanner.py",
      "fileName": "file_scanner.py",
      "language": "python",
      "startLine": 11,
      "endLine": 205,
      "content": "class FileScanner:\r\n    \"\"\"\r\n    Scans workspace directories, filters files, and builds Merkle trees.\r\n    \"\"\"\r\n\r\n    def __init__(self, config: Optional[Dict[str, Any]] = None):\r\n        \"\"\"\r\n        Initialize the file scanner with configuration.\r\n\r\n        Args:\r\n            config: Optional configuration dictionary containing:\r\n                - ignore_patterns: List of glob patterns to ignore\r\n                - max_file_size: Maximum file size in bytes\r\n                - supported_extensions: List of supported file extensions\r\n        \"\"\"\r\n        self.config = config or {}\r\n        self.ignore_patterns = self.config.get(\r\n            \"ignore_patterns\",\r\n            [\r\n                \"**/.git/**\",\r\n                \"**/node_modules/**\",\r\n                \"**/__pycache__/**\",\r\n                \"**/.venv/**\",\r\n                \"**/build/**\",\r\n                \"**/dist/**\",\r\n            ],\r\n        )\r\n        self.max_file_size = self.config.get(\r\n            \"max_file_size\", 1024 * 1024\r\n        )  # Default: 1MB\r\n        self.supported_extensions = self.config.get(\"supported_extensions\", [])\r\n\r\n    def _should_ignore_file(self, file_path: str) -> bool:\r\n        \"\"\"\r\n        Check if a file should be ignored based on ignore patterns.\r\n\r\n        Args:\r\n            file_path: Path to the file\r\n\r\n        Returns:\r\n            True if the file should be ignored, False otherwise\r\n        \"\"\"\r\n        import fnmatch\r\n\r\n        # Check if the file exceeds the maximum size\r\n        if os.path.getsize(file_path) > self.max_file_size:\r\n            return True\r\n\r\n        # Check if file matches any ignore pattern\r\n        for pattern in self.ignore_patterns:\r\n            if fnmatch.fnmatch(file_path, pattern):\r\n                return True\r\n\r\n        # If we have supported extensions and the file's extension is not in the list, ignore it\r\n        if self.supported_extensions:\r\n            _, ext = os.path.splitext(file_path)\r\n            if ext.lower() not in self.supported_extensions:\r\n                return True\r\n\r\n        return False\r\n\r\n    def _compute_file_hash(self, file_path: str) -> str:\r\n        \"\"\"\r\n        Compute the SHA-256 hash of a file's contents.\r\n\r\n        Args:\r\n            file_path: Path to the file\r\n\r\n        Returns:\r\n            Hexadecimal string representation of the hash\r\n        \"\"\"\r\n        h = hashlib.sha256()\r\n        try:\r\n            with open(file_path, \"rb\") as f:\r\n                # Read in chunks to handle large files\r\n                for chunk in iter(lambda: f.read(4096), b\"\"):\r\n                    h.update(chunk)\r\n            return h.hexdigest()\r\n        except Exception as e:\r\n            print(f\"Error computing hash for {file_path}: {str(e)}\")\r\n            # Return a hash of the exception to maintain the tree structure\r\n            return hashlib.sha256(str(e).encode()).hexdigest()\r\n\r\n    def _build_merkle_tree(self, file_hashes: Dict[str, str]) -> Dict[int, List[str]]:\r\n        \"\"\"\r\n        Build a Merkle tree from file hashes and return the complete tree structure.\r\n\r\n        Args:\r\n            file_hashes: Dictionary mapping file paths to their hashes\r\n\r\n        Returns:\r\n            Dictionary representing the complete Merkle tree where:\r\n            - keys are level numbers (0 for leaf nodes, increasing towards root)\r\n            - values are lists of hashes at each level\r\n        \"\"\"\r\n        if not file_hashes:\r\n            # Return a tree with only a root node containing the empty hash\r\n            return {0: [hashlib.sha256(b\"\").hexdigest()]}\r\n\r\n        # Start with the leaf nodes (file hashes)\r\n        tree = {}\r\n        tree[0] = sorted(file_hashes.values())\r\n        current_level = tree[0]\r\n        level = 0\r\n\r\n        # Build the tree by combining adjacent hashes until we reach the root\r\n        while len(current_level) > 1:\r\n            next_level = []\r\n            level += 1\r\n\r\n            # Combine pairs of hashes\r\n            for i in range(0, len(current_level), 2):\r\n                if i + 1 < len(current_level):\r\n                    # Combine two adjacent hashes\r\n                    combined = current_level[i] + current_level[i + 1]\r\n                else:\r\n                    # If there's an odd number of hashes, duplicate the last one\r\n                    combined = current_level[i] + current_level[i]\r\n\r\n                next_level.append(hashlib.sha256(combined.encode()).hexdigest())\r\n\r\n            # Store this level in the tree\r\n            tree[level] = next_level\r\n\r\n            # Move to the next level\r\n            current_level = next_level\r\n\r\n        # Return the complete tree\r\n        return tree\r\n\r\n    def scan_workspace(self, path: str) -> Tuple[List[str], Dict[int, List[str]]]:\r\n        \"\"\"\r\n        Scan a workspace directory recursively and return file paths and Merkle tree structure.\r\n        Files that cannot be read will be included in the file_list but excluded from the Merkle tree.\r\n\r\n        Args:\r\n            path: Path to the workspace directory\r\n\r\n        Returns:\r\n            Tuple containing a list of file paths and the Merkle tree structure\r\n        \"\"\"\r\n        if not os.path.exists(path):\r\n            raise FileNotFoundError(f\"Path {path} does not exist\")\r\n\r\n        if not os.path.isdir(path):\r\n            raise NotADirectoryError(f\"Path {path} is not a directory\")\r\n\r\n        file_list = []\r\n        file_hashes = {}\r\n        readable_files = []\r\n\r\n        # Walk through the directory\r\n        for root, _, files in os.walk(path):\r\n            for file in files:\r\n                file_path = os.path.join(root, file)\r\n\r\n                # Skip files that should be ignored\r\n                if self._should_ignore_file(file_path):\r\n                    continue\r\n\r\n                # Add the file to the list\r\n                file_list.append(file_path)\r\n\r\n                # Check if the file is readable before attempting to hash it\r\n                try:\r\n                    with open(file_path, \"rb\") as f:\r\n                        # Just try to read a byte to confirm file is readable\r\n                        f.read(1)\r\n                    readable_files.append(file_path)\r\n                except Exception as e:\r\n                    print(\r\n                        f\"Skipping unreadable file {file_path} from Merkle tree: {str(e)}\"\r\n                    )\r\n\r\n        # Compute file hashes in parallel (only for readable files)\r\n        with concurrent.futures.ThreadPoolExecutor() as executor:\r\n            # Submit all hash computation tasks\r\n            future_to_path = {\r\n                executor.submit(self._compute_file_hash, file_path): file_path\r\n                for file_path in readable_files\r\n            }\r\n\r\n            # Collect results as they complete\r\n            for future in concurrent.futures.as_completed(future_to_path):\r\n                file_path = future_to_path[future]\r\n                try:\r\n                    file_hash = future.result()\r\n                    file_hashes[file_path] = file_hash\r\n                except Exception as e:\r\n                    print(f\"Error processing {file_path}: {str(e)}\")\r\n\r\n        # Build the Merkle tree (only with readable files)\r\n        merkle_tree = self._build_merkle_tree(file_hashes)\r\n\r\n        return file_list, merkle_tree",
      "parser": "python_parser",
      "type": "class",
      "metadata": {
        "userId": "test-monitor-user-comprehensive",
        "deviceId": "test-monitor-device-comprehensive",
        "workspacePath": "E:\\北京芸思\\code_chunker\\code-chunker\\python",
        "language": "python",
        "startLine": 11,
        "endLine": 205,
        "content": "class FileScanner:\r\n    \"\"\"\r\n    Scans workspace directories, filters files, and builds Merkle trees.\r\n    \"\"\"\r\n\r\n    def __init__(self, config: Optional[Dict[str, Any]] = None):\r\n        \"\"\"\r\n        Initialize the file scanner with configuration.\r\n\r\n        Args:\r\n            config: Optional configuration dictionary containing:\r\n                - ignore_patterns: List of glob patterns to ignore\r\n                - max_file_size: Maximum file size in bytes\r\n                - supported_extensions: List of supported file extensions\r\n        \"\"\"\r\n        self.config = config or {}\r\n        self.ignore_patterns = self.config.get(\r\n            \"ignore_patterns\",\r\n            [\r\n                \"**/.git/**\",\r\n                \"**/node_modules/**\",\r\n                \"**/__pycache__/**\",\r\n                \"**/.venv/**\",\r\n                \"**/build/**\",\r\n                \"**/dist/**\",\r\n            ],\r\n        )\r\n        self.max_file_size = self.config.get(\r\n            \"max_file_size\", 1024 * 1024\r\n        )  # Default: 1MB\r\n        self.supported_extensions = self.config.get(\"supported_extensions\", [])\r\n\r\n    def _should_ignore_file(self, file_path: str) -> bool:\r\n        \"\"\"\r\n        Check if a file should be ignored based on ignore patterns.\r\n\r\n        Args:\r\n            file_path: Path to the file\r\n\r\n        Returns:\r\n            True if the file should be ignored, False otherwise\r\n        \"\"\"\r\n        import fnmatch\r\n\r\n        # Check if the file exceeds the maximum size\r\n        if os.path.getsize(file_path) > self.max_file_size:\r\n            return True\r\n\r\n        # Check if file matches any ignore pattern\r\n        for pattern in self.ignore_patterns:\r\n            if fnmatch.fnmatch(file_path, pattern):\r\n                return True\r\n\r\n        # If we have supported extensions and the file's extension is not in the list, ignore it\r\n        if self.supported_extensions:\r\n            _, ext = os.path.splitext(file_path)\r\n            if ext.lower() not in self.supported_extensions:\r\n                return True\r\n\r\n        return False\r\n\r\n    def _compute_file_hash(self, file_path: str) -> str:\r\n        \"\"\"\r\n        Compute the SHA-256 hash of a file's contents.\r\n\r\n        Args:\r\n            file_path: Path to the file\r\n\r\n        Returns:\r\n            Hexadecimal string representation of the hash\r\n        \"\"\"\r\n        h = hashlib.sha256()\r\n        try:\r\n            with open(file_path, \"rb\") as f:\r\n                # Read in chunks to handle large files\r\n                for chunk in iter(lambda: f.read(4096), b\"\"):\r\n                    h.update(chunk)\r\n            return h.hexdigest()\r\n        except Exception as e:\r\n            print(f\"Error computing hash for {file_path}: {str(e)}\")\r\n            # Return a hash of the exception to maintain the tree structure\r\n            return hashlib.sha256(str(e).encode()).hexdigest()\r\n\r\n    def _build_merkle_tree(self, file_hashes: Dict[str, str]) -> Dict[int, List[str]]:\r\n        \"\"\"\r\n        Build a Merkle tree from file hashes and return the complete tree structure.\r\n\r\n        Args:\r\n            file_hashes: Dictionary mapping file paths to their hashes\r\n\r\n        Returns:\r\n            Dictionary representing the complete Merkle tree where:\r\n            - keys are level numbers (0 for leaf nodes, increasing towards root)\r\n            - values are lists of hashes at each level\r\n        \"\"\"\r\n        if not file_hashes:\r\n            # Return a tree with only a root node containing the empty hash\r\n            return {0: [hashlib.sha256(b\"\").hexdigest()]}\r\n\r\n        # Start with the leaf nodes (file hashes)\r\n        tree = {}\r\n        tree[0] = sorted(file_hashes.values())\r\n        current_level = tree[0]\r\n        level = 0\r\n\r\n        # Build the tree by combining adjacent hashes until we reach the root\r\n        while len(current_level) > 1:\r\n            next_level = []\r\n            level += 1\r\n\r\n            # Combine pairs of hashes\r\n            for i in range(0, len(current_level), 2):\r\n                if i + 1 < len(current_level):\r\n                    # Combine two adjacent hashes\r\n                    combined = current_level[i] + current_level[i + 1]\r\n                else:\r\n                    # If there's an odd number of hashes, duplicate the last one\r\n                    combined = current_level[i] + current_level[i]\r\n\r\n                next_level.append(hashlib.sha256(combined.encode()).hexdigest())\r\n\r\n            # Store this level in the tree\r\n            tree[level] = next_level\r\n\r\n            # Move to the next level\r\n            current_level = next_level\r\n\r\n        # Return the complete tree\r\n        return tree\r\n\r\n    def scan_workspace(self, path: str) -> Tuple[List[str], Dict[int, List[str]]]:\r\n        \"\"\"\r\n        Scan a workspace directory recursively and return file paths and Merkle tree structure.\r\n        Files that cannot be read will be included in the file_list but excluded from the Merkle tree.\r\n\r\n        Args:\r\n            path: Path to the workspace directory\r\n\r\n        Returns:\r\n            Tuple containing a list of file paths and the Merkle tree structure\r\n        \"\"\"\r\n        if not os.path.exists(path):\r\n            raise FileNotFoundError(f\"Path {path} does not exist\")\r\n\r\n        if not os.path.isdir(path):\r\n            raise NotADirectoryError(f\"Path {path} is not a directory\")\r\n\r\n        file_list = []\r\n        file_hashes = {}\r\n        readable_files = []\r\n\r\n        # Walk through the directory\r\n        for root, _, files in os.walk(path):\r\n            for file in files:\r\n                file_path = os.path.join(root, file)\r\n\r\n                # Skip files that should be ignored\r\n                if self._should_ignore_file(file_path):\r\n                    continue\r\n\r\n                # Add the file to the list\r\n                file_list.append(file_path)\r\n\r\n                # Check if the file is readable before attempting to hash it\r\n                try:\r\n                    with open(file_path, \"rb\") as f:\r\n                        # Just try to read a byte to confirm file is readable\r\n                        f.read(1)\r\n                    readable_files.append(file_path)\r\n                except Exception as e:\r\n                    print(\r\n                        f\"Skipping unreadable file {file_path} from Merkle tree: {str(e)}\"\r\n                    )\r\n\r\n        # Compute file hashes in parallel (only for readable files)\r\n        with concurrent.futures.ThreadPoolExecutor() as executor:\r\n            # Submit all hash computation tasks\r\n            future_to_path = {\r\n                executor.submit(self._compute_file_hash, file_path): file_path\r\n                for file_path in readable_files\r\n            }\r\n\r\n            # Collect results as they complete\r\n            for future in concurrent.futures.as_completed(future_to_path):\r\n                file_path = future_to_path[future]\r\n                try:\r\n                    file_hash = future.result()\r\n                    file_hashes[file_path] = file_hash\r\n                except Exception as e:\r\n                    print(f\"Error processing {file_path}: {str(e)}\")\r\n\r\n        # Build the Merkle tree (only with readable files)\r\n        merkle_tree = self._build_merkle_tree(file_hashes)\r\n\r\n        return file_list, merkle_tree",
        "parser": "python_parser",
        "type": "class",
        "vectorDimension": 768,
        "processingTimeMs": 0,
        "modelVersion": "cocosoda-v1.1",
        "createdAt": "2025-06-12T01:19:01.288Z"
      }
    }
  ],
  "originalChunkData": [
    {
      "id": "file_scanner_4055982f_1-3_mbsoxcdj_0",
      "filePath": "chunker/file_scanner.py",
      "type": "variable",
      "contentPreview": "\"\"\"\r\nFile scanner module for traversing directories and building Merkle trees\r\n\"\"\"..."
    },
    {
      "id": "file_scanner_4055982f_5-8_mbsoxcdj_1",
      "filePath": "chunker/file_scanner.py",
      "type": "import",
      "contentPreview": "import os\nimport hashlib\nfrom typing import List, Tuple, Dict, Any, Optional, Set\nimport concurrent.futures..."
    },
    {
      "id": "file_scanner_4055982f_11-205_mbsoxcdj_2",
      "filePath": "chunker/file_scanner.py",
      "type": "class",
      "contentPreview": "class FileScanner:\r\n    \"\"\"\r\n    Scans workspace directories, filters files, and builds Merkle trees.\r\n    \"\"\"\r\n\r\n    def __init__(self, config: Optional[Dict[str, Any]] = None):\r\n        \"\"\"\r\n       ..."
    }
  ]
}